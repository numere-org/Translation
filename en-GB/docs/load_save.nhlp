<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="load_save">
	<title string="Loading and saving" idxkey="load, save, append, export" />
	<keywords>
		<keyword>append</keyword>
		<keyword>csv</keyword>
		<keyword>dx</keyword>
		<keyword>ods</keyword>
		<keyword>export</keyword>
		<keyword>jcamp</keyword>
		<keyword>jcm</keyword>
		<keyword>jdx</keyword>
		<keyword>ibw</keyword>
		<keyword>labx</keyword>
		<keyword>laden</keyword>
		<keyword>load</keyword>
		<keyword>save</keyword>
		<keyword>speich</keyword>
		<keyword>complete</keyword>
		<keyword>keepdim</keyword>
		<keyword>ignore</keyword>
		<keyword>head</keyword>
		<keyword>all</keyword>
		<keyword>tocache</keyword>
		<keyword>totable</keyword>
		<keyword>xy</keyword>
		<keyword>xz</keyword>
		<keyword>fileformat</keyword>
	</keywords>
	<contents>
		<syntax>
			{VALS} = load FILENAME
			{VALS} = load FILENAME -fileformat="FORMAT"
			{VALS} = load FILENAME -totable=TABLE() ...\n
			{VALS} = append FILENAME
			{VALS} = append FILENAME -all ...\n
			save TABLE()
			save TABLE() -file=FILENAME\n
			export TABLE()
			export TABLE() -file=FILENAME
			export TABLE() -file=FILENAME fileformat="FORMAT"
		</syntax>
		NumeRe can load data from files or save them to files. The <code>load</code> and <code>save</code> commands exist for this purpose. The <code>load</code> command loads a file <code>FILENAME</code><codeblock>{i1, i2, j1, j2} = load FILENAME</codeblock>where the indices of the loaded data are returned in the target table, and the command <code>save</code> saves the <code>DATA()</code> in the file <code>FILENAME</code><codeblock>save DATA(I1:I2,J1:J2) -file=FILENAME </codeblock>
		When loading, NumeRe tries to recognize the file format of the file by the file extension. If no extension is given, NumeRe tries to detect it automatically. The first file found (sorted alphabetically) is used. If the file uses an extension other than those listed below for the file format used, the file format can be specified explicitly using the <code>fileformat="FORMAT"</code> option, for example:<codeblock>load "textfile.asc" -fileformat="TXT"</codeblock>
		The following file types can be imported:
		<list>
			<item node="NumeRe data file<br/>  *.ndat">File format: <code>NDAT</code><br/>NumeRe's own binary file format, which preserves precision and data types, and is also faster to load and write</item>
			<item node="Text files<br/>  *.txt, *.dat</item>">File format: <code>TXT</code><br/>Tabular text files, which can be space- or tab-delimited </item>
			<item node="Comma-Separated-Values<br/>  *.csv">File format: <code>CSV</code><br/>Tabular text files whose columns are usually separated by commas or semicolons</item>
			<item node="Spreadsheets<br/>  *.xls, *.xlsx, *.ods">File format: <code>XLS</code>, <code>XLSX</code> oder <code>ODS</code><br/>Tabular files generated by Microsoft Excel(R) or OpenOffice Calc</item>
			<item node="Igor binary waves<br/>  *.ibw">File format: <code>IBW</code><br/>A binary file format generated by Wavemetrics Igor Pro(R)</item>
			<item node="Cassy Lab files<br/>  *.labx">File format: <code>LABX</code><br/>Data sets generated by Cassy Lab</item>
			<item node="JCAMP DX files<br/>  *.jdx, *.dx, *.jcm">File format: <code>JDX</code><br/>Spectrography datasets generated according to the JCAMP-DX standard</item>
			<item node="MetroPro files<br/>  *.dat">File format: <code>ZYGO</code><br/>Datasets generated by Zygo MetroPro(R) and containing interferograms</item>
		</list>
		Some filetypes define dedicated <code>"value"</code> <a href="nhlp://table?frame=new">sub types</a> for individual columns. Those are preserved as far as possible.
		When saving datasets, it is preferred to save to NumeRe's own NumeRe data file format (<code>*.ndat</code>).
		<code>FILENAME</code> names the name of the file, which shall be loaded or to which the data shall be written. As long as this file is stored in the default loading or saving path, respectively, the corresponding file path is not needed. In this case, NumeRe will implicit search in the corresponding directory for the named file. If the file path shall contain whitespaces, then it has to be surrounded by quotation marks.
		You may use placeholders for the default paths or wildcards (<code>*</code> and <code>?</code>), if you like to. See <a href="nhlp://explorer?frame=new">help explorer</a> for further details about these placeholders.
		NumeRe supports loading of multiple files simultaneously. You may use one of the following methods in this case:
		<list>
			<item node="-all">Appending of this parameter and using a filename, which contains <em>at least one wildcard</em>, will result in loading all files matching to this filename</item>
			<item node="append FILE">With this command you may append single files successively to already present data in memory. This command supports the parameter <code>-all</code> as well</item>
			<item node="-totable[=TABLE()]">This parameter creates a table with the corresponding filename or uses the optionally passed target table <code>TABLE()</code> and copies the contents of the data file directly to this table. This parameter supports the additional parameter <code>-all</code> as well. All necessary tables are created automatically</item>
		</list>
		If you don't pass a filename during saving, then NumeRe will choose a fitting filename and the corresponding storage location by itself.
		You may pass the parameter <code>-ignore</code> to the command <code>load</code> to suppress a probable confirmation and to automatically free the needed memory, if applicable. Additionally, you may pass the number of the line in the comments, in which the column headings are located, if you pass <code>-head=LINE</code>. You'll only need this in the rare case that NumeRe is not capable of identifying them by its own.
		To export a data set to a textual file, you may use the command <code>export</code> followed by the data set and the desired filename:<codeblock>export DATA(I1:I2,J1:J2) -file=FILE</codeblock>If you define the file extension "<code>*.tex</code>", then a table using the TeX syntax will be created instead of the usual output. Defining the extension "<code>*.csv</code>" will produce a comma separated values file and passing a filename with "<code>*.xls</code>" as extension will create a Excel (97-2003) sheet containing the exported data. Additionally one may change the number of significant digits by appending the option <code>precision=DIGITS</code>. If another file extension is to be used here than the one used by default for the file format, the file format can also be specified here with the <code>fileformat="FORMAT"</code> option, for example:<codeblock>export table() -file="results.asc" fileformat="TXT"</codeblock>
		<example desc="Saving the table <code>table()</code> into the file <code>table.ndat</code> and exporting the first two columns to a TeX file:">
			save table() -file=table    ## .ndat will be appended automatically
			The data set was successfully saved to "&SAVEPATH&/table.ndat".
			export table(:,1:2) -file=table.tex
			A table with 2088 elements was successfully written to the file "&SAVEPATH&/table.tex".
		</example>
		<em>See also:</em> <a href="nhlp://data?frame=self">help data</a>, <a href="nhlp://table?frame=self">help table</a> und <a href="nhlp://explorer?frame=self">help explorer</a>
	</contents>
</article>