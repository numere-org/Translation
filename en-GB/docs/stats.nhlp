<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="stats">
	<title string="Statistics" idxkey="stats" />
	<keywords>
		<keyword>stat</keyword>
	</keywords>
	<contents>
		<syntax>
			stats TABLE()
			stats TABLE() -set file=FILENAME ...\n
			{VAL} = stats TABLE() -set target=TARGET() ...
		</syntax>
		The command <code>stats</code> allows the statistical analysis of multiple data rows at once. The data rows, which were analysed, may be stored in a table or written including their analysis results to a file afterwards.
		<code>stats</code> needs loaded data or data, which is available in a table. The data may be passed in the following way, where the second variant stores the results into <code>TABLE()</code> and returns the row labels in their respective order in its first column as well as a vector:
		<codeblock>
			stats DATAOBJECT(I1:I2,J1:J2) -set OPTIONS
			{ROWLABELS} = stats DATAOBJECT(I1:I2,J1:J2) -set target=TABLE()
		</codeblock>
		You may pass the target filename with the option <code>file=FILENAME</code>. If the filename shall contain whitespaces, then it has to be passed surrounded with quotations marks (If the file extension is *.tex, then NumeRe will create a TeX file).
		<code>stats</code> calculates the following statistical values:
		<list>
			<item node="Avg">Average <expr>mu</expr> of the data (Functions pendant: <code>avg()</code>)</item>
			<item node="+/-">Standard deviation <expr>sigma</expr> of the data (corresponds to <expr>1sigma</expr>, functions pendant: <code>std()</code>)</item>
			<item node="CI">Half-width of the 95 % confidence interval of the average (average uncertainty) <expr>CI = sigma s_t/sqrt(n)</expr> with the Student factor for <expr>n-1</expr> degrees of freedom <expr>s_t = t_(n-1)(0.95)</expr>. The confidence interval calculates as <expr>[mu-CI, mu+CI]</expr></item>
			<item node="StdErr">Standard error of the average (Functions pendant: <code>stderr()</code>)</item>
			<item node="Med">Median of each column of data (Functions pendant: <code>med()</code>)</item>
			<item node="Q1">lower quartile of each column of data (Functions pendant: <code>pct()</code>)</item>
			<item node="Q3">upper quartile of each column of data (Functions pendant: <code>pct()</code>)</item>
			<item node="RMS">averaged norm of each column of data (root mean square, functions pendant: <code>rms()</code>)</item>
			<item node="Skew">Skewness <expr>gamma_1</expr> of each column of data: <expr>gamma_1 &lt; 0</expr> for left-skewed, <expr>gamma_1 &gt; 0</expr> for right-skewed distributions (Functions pendant: <code>skw()</code>)</item>
			<item node="Exc">Excess kurtosis <expr>gamma_2 = kappa - 3</expr> of each column of data: <expr>gamma_2 &gt; 0</expr> for small-peaked, <expr>gamma_2 &lt; 0</expr> for wide-peaked distributions (Functions pendant: <code>exc()</code>)</item>
			<item node="min">Minimal value (Functions pendant: <code>min()</code>)</item>
			<item node="max">Maximal value (Functions pendant: <code>max()</code>)</item>
			<item node="num">Number of valid values</item>
			<item node="cnt">Number of all values (includes invalid ones)</item>
			<item node="s_t">Student factor for the corresponding 95 % confidence interval (corresponds to the <expr>2sigma</expr> interval, functions pendant: <code>student_t()</code>)</item>
		</list>
		<example desc="Analysis of a loaded data file and export to the file 'results.dat':">
			stats data(:,:) -set file=results
		</example>
	</contents>
</article>