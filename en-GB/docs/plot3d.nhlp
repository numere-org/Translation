<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="plot3d">
	<title string="Plotting of 3D data sets and 3D trajectories" idxkey="plot3d" />
	<keywords>
		<keyword>plot3d</keyword>
		<keyword>graph3d</keyword>
		<keyword>trajek</keyword>
		<keyword>trajec</keyword>
		<keyword>cut</keyword>
		<keyword>nocut</keyword>
		<keyword>crust</keyword>
		<keyword>nocrust</keyword>
	</keywords>
	<contents>
		<syntax>
			plot3d {fx(t), fy(t), fz(t)}, ...
			plot3d {fx(t), fy(t), fz(t)} "LEGEND", ...\n
			plot3d TABLE(), ...
			plot3d TABLE() "LEGEND", ...\n
			plot3d ... -set [x1:x2,y1:y2,z1:z2] t=t0:t1 ...
		</syntax>
		You may display three dimensional data sets and trajectories with the command <code>plot3d</code>. The <expr>(x,y,z)</expr> coordinates of the trajectories may only depend on the single parameter <expr>t</expr>, which defaults to the interval <expr>[0,1]</expr>.
		The <expr>(x,y,z)</expr> coordinates of the trajectories have to be passed using the vector notation <code>{fx(t), fy(t), fz(t)}</code>. Missing coordinates have to be replaced by 0.
		The syntax is identical to <code>plot</code> and there are (except of the third interval <code>[x1:x2,y1:y2,z1:z2]</code>, although not all intervals must be passed) only the following additional options:
		<list>
			<item node="t=t0:t1">Set the parameter interval to <expr>[t0,t1]</expr></item>
			<item node="rotate=THETA,PHI">Rotate the view on the graph around the angles PHI and THETA. PHI rotates the graph around its <expr>z</expr> axis and THETA tilts it</item>
			<item node="cut/nocut">Makes the both front octants (in-)visible so that the view to the center of the plot is possible</item>
			<item node="marks=VALUE/nomarks">Draws circles of the size VALUE at the <expr>(x,y,z)</expr> coordinates, where the circles are filled according their <expr>z</expr> values using the current coloring scheme</item>
			<item node="crust/nocrust">recontructs a 2D surface out of arbitrary distributed <expr>(x,y,z)</expr> points. The current coloring scheme will be used</item>
			<item node="alpha=VAL/<br/>  noalpha">Set the transparency on/off. The strength of transparency (0 = no transparency, 1 full transparency) may be modified using the optional VAL</item>
			<item node="alphamask/<br/>  noalphamask">Calculate the marks transparency according a second function/data set. Works only in combination with <code>marks=VALUE</code></item>
			<item node="colormask/<br/>  nocolormask">Color the marks according a second function/data set. The colorscale probably must be resized with <code>colorrange=c1:c2</code>. Works only in combination with <code>marks=VALUE</code></item>
			<item node="light[=TYPE]/<br/>  nolight">Set the 3D lighting effect on/off. The TYPE is an optional value: TYPE=smooth or TYPE=soft switch to a more smooth lighting</item>
		</list>
		The option <code>rotate</code> needs not necessary two angles. You may only pass the angle, which shall be changed with <code>rotate=THETA,</code> or <code>rotate=,PHI</code>, respectively. But note that the comma is essential for identifying the actual angle. The default angles are THETA=60 and PHI=115.
		Additional you need at least 3 columns of data: <expr>x, y, z</expr> (If more are passed, NumeRe will automatically choose the first three).
		If the parameter <code>errorbars</code> is active, NumeRe needs 6 columns in this order: <expr>x, y, z, delta_x, delta_y, delta_z</expr>
		<example desc="Plotting of the columns 3-5 out of <code>data()</code> with the options <code>grid opng=data</code> and a tornado-like trajectory:" type="verbatim">
			|&lt;- plot3d data(:,3:5), {3*t*cos(24*t), 3*t*sin(24*t), 6*t} -set grid opng=data
			|-&gt; Calculating data for 3D-Plot ...
			|-&gt; Saving ... Success.
			|   Saved at: "&PLOTPATH&/data.png"
		</example>
		<img src="<>/docs/plot3ddata.png" />
		<em>See also:</em> <a href="nhlp://plot?frame=self">help plot</a>
	</contents>
</article>