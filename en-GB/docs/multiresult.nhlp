<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="multiresult">
	<title string="Vectorized expressions" idxkey="multiresult" />
	<keywords>
		<keyword>mehrf</keyword>
		<keyword>multi</keyword>
		<keyword>spalt</keyword>
		<keyword>vektor</keyword>
		<keyword>{</keyword>
	</keywords>
	<contents>
		NumeRe can calculate <em>several expressions at the same time</em> by entering them separated by commas. To calculate a <em>vector expression</em>, however, either the variables or functions involved must be vector (or return several elements) or scalar values must be combined into a vector using curly brackets, e.g. <code>{x, y, z, ...}</code>; the values <code>x, y, ...</code> can also have different data types or be vectors themselves in the latter case.
		The operations are then performed component by component. If several vector values are used in an expression whose number of elements is not identical, the missing elements are added as "empty" elements, i.e. they are generally replaced virtually by <code>0</code> or <code>""</code>.
		The result of such a vectorial calculation can be assigned to different data structures depending on the result data types obtained for the individual elements:
		<list>
			<item node="*">If the types are different, the result can either be assigned to a <a href="nhlp://cluster?frame=new">cluster</a>, a row of a <a href="nhlp://table?frame=new">table</a> (provided the types match) or a vector of variables with the matching types: <code>{v1,v2,...} = {...}</code></item>
			<item node="*">If the types are identical, the result can be assigned <em>as a further option</em> to a variable of the same type, which then becomes vectorial </item>
		</list>
		<example desc="Vectorial calculation of the values of <code>cos(n*PI) + n</code>, where <code>n = {1, 2, 3, 4, 5}</code>, as well as further examples of vectorial assignments:">
			cos({1, 2, 3, 4, 5}*_pi) + {1, 2, 3, 4, 5}
			ans = {      0,       3,       2,       5,       4}
			fVect = {1:3}
			ans = {      1,       2,       3}
			sVect = {"Hello", "World"}
			ans = {"Hello", "World"}
			{f, s} = {42, "The answer"}
			ans = {     42, "Th..."}
		</example>
		<em>See also:</em> <a href="nhlp://operator?frame=self">help operator</a>, <a href="nhlp://cluster?frame=self">help cluster</a> and <a href="nhlp://table?frame=self">help table</a>
	</contents>
</article>