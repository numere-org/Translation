<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="audio">
	<title string="Creating and reading audio files" idxkey="audio, audioread, seek" />
	<keywords>
		<keyword>audio</keyword>
		<keyword>wav</keyword>
		<keyword>pcm</keyword>
		<keyword>sound</keyword>
	</keywords>
	<contents>
		<syntax>
			audio TABLE()
			audio TABLE() -set samples=SAMPLES ...\n
			{nSamples, nChannels, nSampleRate, fDurInSecs} = audioread PATH/TO/AUDIOFILE.wav
			{i1, i2, j1, j2} = audioread PATH/TO/AUDIOFILE.wav -set target=TABLE()\n
			nSamples = seek POSITION, LENGTH -set file=PATH/TO/AUDIOFILE.wav
			nSamples = seek POSITION, LENGTH -set file=PATH/TO/AUDIOFILE.wav target=TABLE()
		</syntax>
		NumeRe can generate audio files in PCM wave format from data sets, which can be played in any audio player. The <code>audio</code> command can be used for this purpose. NumeRe can generate the audio files as either mono or stereo, depending on whether 1 or 2 columns are passed to the command:<codeblock>audio DATA(I1:I2,J1:J2)</codeblock>It is <em>not</em> possible to specify <expr>x</expr> values or the time axis of the audio file; the samples of the audio file must always be equidistant. Use the <code>regularize</code> command to calculate equidistant samples from non-equidistant data sets. Samples are to be understood as a group of one data point per channel.
		The generated audio file is automatically normalized to the maximum value of the data set.
		By default, the audio files are generated with a sample rate of 44.1 kHz. If this is not desired, the parameter <code>samples=SAMPLERATE</code> can be passed to the command with the desired SAMPLERATE as a natural number.
		As output file NumeRe uses <code>&lt;savepath&gt;/audiofile.wav</code> by default. By means of the parameter <code>file=FILENAME</code> this can be changed.
		To read audio files, the command <code>audioread</code> can be used with the file name as expression. If a target table is also specified with <code>target=TABLE()</code>, NumeRe will attempt to load the entire file into memory. Otherwise, only the file's metadata (number of samples, channels, sample rate, and duration in seconds) will be loaded:
		<codeblock>
			{nSamples, nChannels, nSampleRate, fDurInSecs} = audioread PATH/TO/AUDIOFILE.wav
			{i1, i2, j1, j2} = audioread PATH/TO/AUDIOFILE.wav -set target=TABLE()
		</codeblock>
		<em>Important</em>: audio data may require a large number of data points. It is possible that the number of samples cannot be handled by NumeRe. To save some memory space, audio data is loaded with the <code>"value.f32"</code> <a href="nhlp://table?frame=new">sub type</a>.
		For very large files, it may be better to read in only sections of these files. The <code>seek</code> command can be used to read a section starting at a position POSITION and length in samples LENGTH, returning the number of samples read:<codeblock>nSamples = seek POSITION, LENGTH -set file=PATH/TO/AUDIOFILE.wav target=TABLE()</codeblock>The target table defaults to <code>audiodata()</code> if not specified.
		<example desc="Creating of the audio file 'sin.wav' with a sample rate of 16 kHz and only one channel using the data out of column 2 in 'table()':">
			audio table(:,2) -set samples=16'k file=sin.wav
		</example>
		<em>See also:</em> <a href="nhlp://regularize?frame=self">help regularize</a>
	</contents>
</article>