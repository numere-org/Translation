<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="datagrid">
	<title string="Data grids" idxkey="datagrid" />
	<keywords>
		<keyword>datagr</keyword>
		<keyword>datengit</keyword>
	</keywords>
	<contents>
		<syntax>
			datagrid f(x,y) -set [x1:x2,y1:y2]
			datagrid f(x,y) -set [x1:x2,y1:y2] samples=SAMPLES
			datagrid TABLE() -set [x1:x2,y1:y2]
			datagrid TABLE() -set x=TABX() y=TABY()
			datagrid ... -set target=TABLE()
		</syntax>
		If you want process 2D data, often this data has to be available in terms of a <em>data grid</em>: <expr>x</expr> and <expr>y</expr> values in the first two columns and their corresponding <expr>z</expr> values as a matrix with the dimensions of the first two columns:
		<verbatim>
			\t\t\t- - - - - - - - y - - - - - - &gt;
			/  x1  y1  z(x1,y1)  z(x1,y2)  ...  z(x1,ym)  \  |
			|  x2  y2  z(x2,y1)  z(x2,y2)  ...  z(x2,ym)  |  |x
			| ... ...       ...       ...  ...       ...  |  |
			\  xn  ym  z(xn,y1)  z(xn,y2)  ...  z(xn,ym)  /  V
		</verbatim>
		NumeRe can create these data grids by itself using the command <code>datagrid</code>:<codeblock>datagrid Z-VALUES -set x=X-VALUES y=Y-VALUES samples=SAMPLES</codeblock>
		You may pass the values for <expr>x</expr> and <expr>y</expr> in multiple way: either as an interval in the gathered form <code>[x0:x1,y0:y1]</code> or single through <code>x=x0:x1</code> or as a line/column of a data set like <code>y=data(:,3)</code>.
		There are multiple possibilities for <expr>z</expr> as well: either as a function of <expr>x</expr> and <expr>y</expr> (e.g. <expr>f(x,y) = cos(x)*exp(-y)</expr>), as a matrix of a data set (<code>table(3:,7:100)</code>) or as a single line/column of a data set (<code>data(4,2:)</code>). In the latter case NumeRe will try to connect the defined <expr>(x,y,z)</expr> points using the triangulation method and then it creates a grid through linear interpolation.
		The parameter <code>samples=SAMPLES</code> is optional and defines, how many samples shall be calculated, if there's a component of the data grid, which has to be calculated. The default is (just like in every 2D plot) 100 x 100 samples. It's possible to pass different samples per lateral dimension via <code>samples={X-SAMPLES,Y-SAMPLES}</code>.
		If the <expr>x</expr> and the <expr>y</expr> axis are swapped compared to the upper scheme, one can pass the parameter <code>transpose</code> to <code>datagrid</code>. This will swap the rows and columns in the created data grid.
		The created data grid will be automatically copied to a free place in the table <code>grid()</code> (will be created automatically, if necessary) right hand of already existing data and may be plotted using this table.
		<example desc="Generating of a data grid out of three columns of <code>data()</code>:">
			datagrid data(:,3) -set x=data(:,1) y=data(:,2)
			The data grid was successfully created in "grid()".
		</example>
		<em>See also:</em> <a href="nhlp://surf?frame=self">help surf</a>, <a href="nhlp://mesh?frame=self">help mesh</a>, <a href="nhlp://plot?frame=self">help plot</a>, <a href="nhlp://data?frame=self">help data</a> and <a href="nhlp://table?frame=self">help table</a>
	</contents>
</article>