<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="fft">
	<title string="Fourier-Transformation von Datensätzen" idxkey="fft,fft2d" />
	<keywords>
		<keyword>fft</keyword>
		<keyword>fft2d</keyword>
		<keyword>fourier</keyword>
		<keyword>complex</keyword>
		<keyword>inverse</keyword>
		<keyword>axisshift</keyword>
	</keywords>
	<contents>
		NumeRe ist mit einem Algorithmus zu schnellen Fourier-Transformation (<em>fast fourier transformation; fft</em>) ausgestattet, der Datensätze zur Analyse in ihre enthaltenen Frequenzen zerlegen kann. Dieser Algorithmus wird mit dem Kommando <code>fft</code> gestartet, wobei die Datenreihen zusätzlich angegeben werden müssen:<codeblock>fft DATENOBJEKT(I1:I2,J1:J2)</codeblock>
		NumeRe erwartet bei einer Fourier-Transformation mindestens zwei Spalten: Achsenwerte (Zeit oder Frequenz) und Amplitude (Real- oder Komplexwertig). Wenn drei Spalten angegeben werden, werden diese als Achsenwerte, Amplitude und Phase, oder - falls die zusätzliche Option <code>-complex</code> übergeben wird - als Achsenwerte, Realteil und Imaginärteil der Amplitude interpretiert.
		Im Falle eines Datengitters oder eines Bildes kann auch eine 2D-FFT mit dem Kommando <code>fft2d</code> durchgeführt werden.
		<em>Hinweis:</em> Eine FFT ist bei Datensätzen mit einer Länge einer Zweierpotenz (z.B. <expr>2^2, 2^3, 2^4, ...</expr> Datenpunkte) besonders effizient. Sollte die Länge der Datensätze jedoch nur durch besonders große Primzahlen faktorisiert werden können, kann die Berechnung sehr lange dauern (d.h. mehrere Minuten). Oberhalb von 1000 Datenpunkten adaptiert NumeRe die Länge der Datenpunkte automatisch, so dass sie zumindest geradzahlig sind.
		Das Ergebnis der Fourier-Transformation wird in Form mehrerer neuer Datenreihen im Cache <code>fftdata()</code> (wird ggf. automatisch erzeugt) gespeichert. Das Ziel der Transformation kann aber auch mittels der Option <code>target=TARGETCACHE()</code> angepasst werden. Per default werden drei Spalten erzeugt: Frequenz [Hz], Amplitude und Phase [rad]. (Bei <code>fft2d</code> ist es nur die Amplitude als Datengitter.) Mit der zusätzlichen Option <code>-complex</code> wird der Real- und Imaginärteil der Amplitude statt deren Betrag und der Phase in den Cache gespeichert.
		NumeRe kann auch eine inverse Transformation ausführen. Dazu muss die zusätzliche Option <code>-inverse</code> übergeben werden.
		<em>Hinweis:</em> Bei der Berechnung der Fourier-Transformation wird ein zweiseitiges Spektrum berechnet, das symmetrisch um die Nyquist-Frequenz <expr>f_(max)/2</expr> orientiert ist. Zur Interpretation realwertiger Signale genügt jedoch das einseitige Spektrum. Dieses befindet sich in der ersten Hälfte des berechneten Spektrums (<expr>f = [0, f_(max)/2]</expr>). Mit der Option <code>-axisshift</code> wird die zweite Hälfte des berechneten Spektrum ins negative verschoben, so dass das Spektrum nun symmetrisch um <expr>f = 0</expr> ist, was die Interpretation vereinfacht. Bei inversen Transformationen kann diese Verschiebung ebenfalls mit <code>-axisshift</code> rückgängig gemacht werden.
		<em>Bemerkung zur Normierung:</em> NumeRe normiert das zweiseitige Spektrum so, dass die dargestellten Amplituden den Amplituden des ursprünglichen Signals entsprechen, um die Interpretation zu vereinfachen. Gegenüber der mathematisch korrekten Normierung sind alle Frequenzen ungleich 0 damit um den Faktor 2 zu groß. Bei der inversen Transformation wird diese Normierung natürlich kompensiert; für synthetische Spektren muss dies allerdings berücksichtigt werden.
		<example desc="Fourier-Transformation der Spalten 2 und 3 in <code>data()</code>, wobei die Zeit in Spalte 3 enthalten ist, und Ausgabe mit Real- und Imaginärteil:">
			fft data(:,3:2) -complex
		</example>
		<em>Siehe auch:</em> <a href="nhlp://fwt?frame=self">help fwt</a> und <a href="nhlp://stfa?frame=self">help stfa</a>
	</contents>
</article>