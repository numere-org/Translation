<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="string">
	<title string="Zeichenketten" idxkey="string" />
	<keywords>
		<keyword>#</keyword>
		<keyword>\"</keyword>
		<keyword>\t</keyword>
		<keyword>\n</keyword>
		<keyword>noquot</keyword>
		<keyword>nq</keyword>
		<keyword>peek</keyword>
		<keyword>print</keyword>
		<keyword>string</keyword>
	</keywords>
	<contents>
		NumeRe ist in der Lage, mit Zeichenketten umzugehen. Dies kann verwendet werden, um beispielsweise die Tabellenköpfe einer Tabelle automatisch zu definieren. Zeichenketten können in Zeichenkettenvariablen gespeichert werden, die von NumeRe automatisch als solche erkannt werden, wenn ihnen während der Initialisierung eine Zeichenkette zugewiesen wurde:<codeblock>STRINGVAR = "ZEICHENKETTE", STRINGVAR2 = "ZEICHENKETTE2", ...</codeblock>Eine Konvertierung der Variablentypen von numerisch zu Zeichenkette oder umgekehrt ist nicht möglich.
		Zeichenketten (auch: "strings") müssen dabei in umschließenden Anführungszeichen eingegeben werden. Zwei oder mehr Zeichenketten können durch ein jeweils zwischengestelltes <code>+</code> verknüpft werden. Durch ein zwischengestelltes <code>,</code> können mehrere Zeichenketten zugleich verarbeitet werden.
		Aus Gründen der Abwärtskompatibilität steht das <code>string()</code>-Objekt für mehrfache Zeichenketten zur Verfügung. Dieses Objekt entspricht einer <a href="nhlp://table?frame=new">Tabelle</a>, die nur Zeichenketten speichen kann. Da diese Funktion auch direkt von Tabellen bereitgestellt wird, wird eine Verwendung von <code>string()</code> <em>nicht</em> mehr empfohlen.
		Die fünf Funktionen <code>num()</code>, <code>cnt()</code>, <code>min()</code>, <code>max()</code> und <code>sum()</code> sind für die Arbeit mit Zeichenketten überladen: <code>num()</code> gibt die Zahl der Zeichenketten mit Elementen, <code>cnt()</code> die Zahl aller Zeichenketten, <code>min()</code> die kleinste und <code>max()</code> die größte Zeichenkette zurück. Die Funktion <code>sum()</code> verkettet alle enthaltenen Zeichenketten zu einer einzigen.
		Innerhalb einer Zeichenkette können Modifikatoren verwendet werden, die Einfluss auf die Darstellung der Zeichenkette haben. NumeRe versteht dabei die folgenden Modifikatoren:
		<list>
			<item node="'\n'" type="verbatim">erzeugt einen Zeilenumbruch an seiner Position</item>
			<item node="'\t'">erzeugt einen horizontalen Tabulator an seiner Position</item>
			<item node="'\&quot;'">erzeugt ein (nicht unterdrückbares) Anführungszeichen an seiner Position</item>
			<item node="'\ '">maskiert den Backslash selbst</item>
		</list>
		NumeRe kann den Wert von Variablen in eine Zeichenkette umwandeln, wenn die Variable mit einem vorangestellten <code>#</code> aufgerufen wird. Werden zwischen den Variablennamen und <code>#</code> ein oder mehrere <code>~</code> eingefügt, so ergänzt NumeRe in der Ausgabe ggf. so viele <code>0</code> vor dem eigentlichen Wert, dass die Zahl der ausgegeben Zeichen mindestens gleich der Zahl der <code>~</code>+1 ist. Besitzt der Wert der Variablen bereits ausreichend oder mehr Stellen, wird NumeRe nichts ergänzen. Außerdem können die Ergebnisse von ganzen Ausdrücken durch <code>#(AUSDRUCK)</code>, von Funktionen mittels <code>#FUNKTION(ARGS)</code> und die Werte von <a href="nhlp://explorer?frame=new">Pfad-Platzhaltern</a> durch <code>#&lt;PFAD&gt;</code> umgewandelt werden.
		Die Tabellenköpfe der Datenobjekte können mit der Syntax <code>TABLE(#,Spalte)</code> ausgelesen und bearbeitet werden. Der Dateinamen des geladenen Datenfiles kann mit <code>data(#,#)</code> gelesen werden.
		NumeRe ist in der Lage, Zeichenkettenlogik auszuführen. Dazu können die Vergleichsoperatoren <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code> und <code>&gt;=</code> angewendet werden, um zwei Zeichenketten zu vergleichen. Dabei vergleichen die Operatoren die ASCII-Zeichenwerte der beiden Zeichenketten zeichenweise. Außerdem können Logikausdrücke mit <code>&&</code> und <code>||</code> verknüpft werden.
		NumeRe gibt mehrere Zeichenketten zugleich ähnlich wie numerische Werte als Vektoren zurück, die dann die aktuellen Werte im <a href="nhlp://cluster?frame=new">Cluster</a> <code>ans{}</code> ersetzen. Aus Darstellungsgründen müssen Zeichenketten dabei in der Konsolenausgabe häufig abgeschnitten werden:<codeblock>ans = { "STRING1...", "STRING2...", "STRING3...", ...}</codeblock>Um eine Zeichenkette als eine Textausgabe zu verwenden, muss das Kommando <code>print</code> vorangestellt werden: <code>print STRING</code>. Dabei werden automatisch alle umschließenden Anführungszeichen entfernt. Mehrfache Zeichenketten werden in diesem Fall komplett und durch Komma getrennt dargestellt.
		Um zu prüfen, ob die Variable, die einer NumeRe-Prozedur übergeben wurde, eine Zeichenkette ist, bietet sich die Funktion <code>is_string(EXPR)</code> an, die <code>true</code> zurückgibt, wenn EXPR eine oder mehr Zeichenketten enthält. Um eine Zeichenkette (aus Ziffern oder einen Variablenname) in einen Wert umzuwandeln, bietet NumeRe die Funktion <code>to_value(STRING)</code> an. Die Funktion <code>to_string(EXPR)</code> wandelt EXPR in eine Zeichenkette um, ungeachtet eventueller Rechenoperationen in EXPR, Zeichenketten und -variablen werden jedoch ausgewertet. <code>string_cast(EXPR)</code> ist noch brutaler: hier werden selbst Zeichenkettenvariablennamen direkt in Zeichenketten umgewandelt. Die Funktion <code>to_cmd(STRING)</code> wandelt die Zeichenkette STRING in einen Kommandoausdruck um.
		Einige Zeichenkettenfunktionen sind auch als Methoden für Zeichenkettenvariablen (nicht literalen Zeichenketten) verfügbar. Es handelt sich hierbei jedoch nur um Aliase um die Lesbarkeit zu verbessern. Es wird keine neue Funktionalität implementiert. Die Methoden lauten wie folgt:
		<codeblock>
			STRVAR.len()           =>   strlen(STRVAR)
			STRVAR.first()         =>   firstch(STRVAR)
			STRVAR.last()          =>   lastch(STRVAR)
			STRVAR.startsw(STR)    =>   startswith(STRVAR,STR)
			STRVAR.endsw(STR)      =>   endswith(STRVAR,STR)
			STRVAR.at(P)           =>   char(STRVAR,P)
			STRVAR.fnd(STR,P)      =>   strfnd(STR,STRVAR,P)
			STRVAR.rfnd(STR,P)     =>   strrfnd(STR,STRVAR,P)
			STRVAR.sub(P,L)        =>   substr(STRVAR,P,L)
			STRVAR.splt(CHR)       =>   split(STRVAR,CHR)
			STRVAR.mtch(STR,P)     =>   strmatch(STR,STRVAR,P)
			STRVAR.rmtch(STR,P)    =>   strrmatch(STR,STRVAR,P)
			STRVAR.nmtch(STR,P)    =>   str_not_match(STR,STRVAR,P)
			STRVAR.nrmtch(STR,P)   =>   str_not_rmatch(STR,STRVAR,P)
		</codeblock>
		<example desc="Automatisches Füllen der Tabellenköpfe in einer FOR-Schleife, wobei die Nummer der aktuellen Spalte auf mindestens zwei Zeichen ergänzt werden soll:" type="verbatim">
			|FOR&gt; [...]
			|FOR&gt; table(#,i) = "Spalte_" + #~i  ## (wird ggf. eine 0 ergänzen)
			|FOR&gt; [...]
		</example>
		<em>Siehe auch:</em> <a href="nhlp://procedure?frame=self">help procedure</a>, <a href="nhlp://explorer?frame=self">help explorer</a> und <a href="nhlp://cluster?frame=self">help cluster</a>
	</contents>
</article>