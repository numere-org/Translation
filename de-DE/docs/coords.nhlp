<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="coords">
	<title string="Koordinatensätze für Plots" idxkey="coords" />
	<keywords>
		<keyword>coord</keyword>
		<keyword>koord</keyword>
		<keyword>polar</keyword>
		<keyword>spheri</keyword>
		<keyword>zylind</keyword>
		<keyword>cylind</keyword>
		<keyword>cartesi</keyword>
		<keyword>kartesi</keyword>
		<keyword>parametric</keyword>
	</keywords>
	<contents>
		NumeRe ist mit drei wesentlichen Koordinatensätzen ausgestattet: kartesisch <expr>(x,y,z)</expr>, polar/zylindrisch <expr>(rho,phi[,z])</expr> und sphärisch <expr>(r,phi,theta)</expr>. Diese Koordinatensätze können beim Plotten mit der Option <code>coords=KOORDINATEN</code> ausgewählt werden.
		<h>Parametrische Koordinatentransformation</h>
		Teilweise können Koordinatentransformationen direkt parametrisch angegeben werden. Dabei verwendet NumeRe zusätzliche Funktionen oder Datengitter als Abbildungen für die jeweiligen <expr>x</expr>- bzw. <expr>y</expr>-Koordinaten. Diese Variante kann aktiviert werden durch Verwendung von <code>coords=parametric</code> oder <code>coords=KOORDINATEN-parametric</code> (bei Kombination mit einer weiteren Standard-Koordinatentransformation) und bleibt nur für den aktuellen Plot aktiv. Mit diesem Modus können Plots auch wie bei MATLAB(R) angegeben werden, beispielsweise:
		<codeblock>
			plot xFUNC(x), yFUNC(x) -set coords=parametric
			plot xDAT(), yDAT() -set coords=parametric
			surf xDAT(), yDAT(), zDAT() -set coords=parametric ## xDAT(), yDAT(), zDAT() sind Datengitter
		</codeblock>
		<example desc="Plotten eines Meshgrids einer Kugel mit parametrischen Koordinaten:">
			mesh sin(_pi*x)*sin(_pi*(y+1)/2), cos(_pi*x)*sin(_pi*(y+1)/2), cos(_pi*(y+1)/2) -set [-1:1,-1:1,-1:1] coords=parametric
		</example>
		<img src="<>/docs/parametricsphere.png" />
		<h>Standard-Koordinatentransformationen</h>
		Die Art der standardmäßig definierten Koordinaten wird durch die folgenden Optionen bestimmt. Für Plotstile mit einem "3d" im Namen (z.B. <code>plot3d</code> oder <code>mesh3d</code>) sind <code>polar</code> (entspricht <code>polar_rp</code>) und <code>spherical</code> (entspricht <code>spherical_rp</code>) die einzigen Optionen.
		<list>
			<item node="cartesian">kartesische <expr>(x,y,z)</expr>-Koordinaten</item>
			<item node="polar">Polare/zylindrische <expr>(rho,phi,z)</expr>-Koordinaten. Wird als <code>polar_pz</code> interpretiert oder als <code>polar_rp</code>, wenn der Plotstil ein "3d" im Namen enthält oder ein Vektorplot ist</item>
			<item node="polar_pz">Polare/zylindrische Koordinaten mit <expr>x = phi, y = z, z = rho</expr></item>
			<item node="polar_rp">Polare/zylindrische Koordinaten mit <expr>x = rho, y = phi, z = z</expr></item>
			<item node="polar_rz">Polare/zylindrische Koordinaten mit <expr>x = rho, y = z, z = phi</expr></item>
			<item node="spherical">Sphärische <expr>(r,phi,theta)</expr>-Koordinaten. Wird als <code>spherical_pt</code> interpretiert oder als <code>spherical_rp</code>, wenn der Plotstil ein "3d" im Namen enthält oder ein Vektorplot ist</item>
			<item node="spherical_pt">Sphärische Koordinaten mit <expr>x = phi, y = theta, z = r</expr></item>
			<item node="spherical_rp">Sphärische Koordinaten mit <expr>x = r, y = phi, z = theta</expr></item>
			<item node="spherical_rt">Sphärische Koordinaten mit <expr>x = r, y = theta, z = phi</expr></item>
		</list>
		NumeRe wählt automatisch die Plotintervalle <expr>[0,2PI]</expr> für <expr>phi</expr> und <expr>[0,PI]</expr> für <expr>theta</expr>, sofern nichts anderes vorgegeben wird. Die Darstellung der entsprechenden Achsen erfolgt dann jedoch auf <expr>PI</expr> normiert.
		<example desc="Darstellen der Kugelflächenfunktion <expr>Y_(3 2)(theta,phi)</expr> in sphärischen Koordinaten:">
			surf Y(3, 2, y, x) -set coords=spherical_pt
		</example>
		<img src="<>/docs/sphericalharmonic.png" />
	</contents>
</article>