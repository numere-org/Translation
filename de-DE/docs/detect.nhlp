<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2020  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="detect">
	<title string="Strukturerkennung" idxkey="detect" />
	<keywords>
		<keyword>detect</keyword>
		<keyword>attract</keyword>
		<keyword>minval</keyword>
		<keyword>minlen</keyword>
	</keywords>
	<contents>
		<syntax>
			detect TABLE()
			detect TABLE() -set minval=VAL minlen=LENGTH attract={x,y} target=TARGET()
		</syntax>
		Mit dem Kommando <code>detect</code> können Strukturen in einem 2D-Datengitter erkannt werden. Die Strukturen werden in einer Tabelle in Spalten für <expr>x</expr> und <expr>y</expr> angelegt, dabei sind verschiedene Strukturen durch Leerzeilen getrennt (alle Strukturen liegen untereinander in denselben beiden Spalten ab). Das Kommando hat die folgende Syntax:<codeblock>detect TABLE() -set minval=VAL minlen=LENGTH attract={x,y} target=TRGT()</codeblock>wobei <code>TABLE()</code> ein <a href="nhlp://datagrid?frame=new">2D-Datengitter</a> enthalten muss.
		Die Optionen haben die folgende Bedeutung:
		<list>
			<item node="minval=VAL">Definiert die untere Schwelle <expr>VAL</expr>, ab der Strukturen erkannt werden. Strukturen unter diesem Wert werden ignoriert. Ist standardmäßig identisch zum Minimum des Datengitters</item>
			<item node="minlen=LENGTH">Definiert die minimale Länge an Punkten, die eine Struktur haben muss. Kürzere Strukturen werden ignoriert. Ist standardmäßig identisch 0</item>
			<item node="attract={x,y}">Definiert die Anzahl an Datenpunkten in <expr>x</expr> und <expr>y</expr>, die Strukturen überspringen können und trotzdem noch als eine einzige Struktur gelten. Ist standardmäßig identisch zu <expr>(x,y) = (0,1)</expr>. <em>Hinweis:</em> Wenn nur ein Wert übergeben wird, wird dieser für<expr>y</expr> verwendet</item>
			<item node="target=TRGT()">Definiert die Zieltabelle, in der die Strukturen abgelegt werden. Ist standardmäßig identisch zu <code>detectdat()</code></item>
		</list>
		<example desc="Strukturerkennung einer 2D-Map berechnet aus:<br/><expr>exp(-30*(y - 0.5*sin(_pi*x))^2 - rnd(0,1)/10) + exp(-30*(y + 0.5*sin(_pi*x))^2 - rnd(0,1)/10) + exp(-30*(x + y)^2 - rnd(0,1)/10)</expr>, wobei <expr>rnd(0,1)</expr> gleichverteilte Zufallszahlen zwischen 0 und 1 zurückgibt">
			detect grid() -set minval=1.5 attract={5,2} minlen=5
			Die erkannten Strukturen wurden in "detectdat()" gespeichert.
			compose; dens grid(); plot detectdat() -set box connect; endcompose
		</example>
		<img src="<>/docs/detect.png" />
		<em>Siehe auch:</em> <a href="nhlp://compose?frame=self">help compose</a>
	</contents>
</article>